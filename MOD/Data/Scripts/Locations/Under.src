#include "include\aim.cpp"

// При заезде в здание проверяеться выполнил или нет задание и выдает соотвествующие тексты либо герерит задание	
void proc OnEnterBuild(char item)
{
	if (item!="B_STATION_BASE")
		{
		int iState;
		iState = 0;
		switch (item)
		{
		case "B_STATION_A": iState = 1;
		case "B_STATION_B":  iState = 2;
		case "B_STATION_ENTRY": iState  = 3;
		}
		
		char sArea;
		sArea = GetArea();
		
		// Сначала выходы
		if (iState==3)
		{
			switch (sArea)
			{
			case "station_01": MoveToLocation("location1", "B_L1_MINE1"); 
			case "station_02": MoveToLocation("location2", "B_L2_MINE1");		 
			case "station_03": MoveToLocation("location3", "B_L3_ENTRANCE"); 
			case "station_05": MoveToLocation("location5", "B_L5_MINE1"); 
			case "station_06": MoveToLocation("location6", "B_L6_MINE1"); 
			case "station_21": MoveToLocation("location9", "B_L9_ENTRANCE"); 
			case "station_17": MoveToLocation("location13"); 
			case "location13": MoveToLocation("station_17"); 
			case "location12": MoveToLocation("location10", "B_L10_ENTRANCE"); 
			}
			PlayVideo("Data\Video\down.bik");		
			return;
		}
		
		
		int iBlue;
		iBlue = GetVar("AIM.UNDER.BLUE");
	
		if (iBlue==2)
		{
			switch (sArea)
			{
			case "station_01": iBlue = 0;
			case "station_02": iBlue = 0;		
			case "station_03": MoveToLocation("station_23", "B_STATION_EXIT_A");
			case "station_05": MoveToLocation("station_35", "B_STATION_EXIT_A");
			case "station_06": MoveToLocation("station_36", "B_STATION_EXIT_A");
			case "station_21": MoveToLocation("station_01", "B_STATION_EXIT_A");
			case "location12": iBlue = 0;
			case "location13": iBlue = 0;		
			case "station_12": MoveToLocation("station_32", "B_STATION_EXIT_A");
			case "station_17": iBlue = 0;
			case "station_23": MoveToLocation("station_33", "B_STATION_EXIT_A");
			case "station_32": MoveToLocation("station_12", "B_STATION_EXIT_A");
			case "station_33": MoveToLocation("station_23", "B_STATION_EXIT_A");		
			case "station_36": MoveToLocation("station_06", "B_STATION_EXIT_A");				
			case "station_35": MoveToLocation("station_05", "B_STATION_EXIT_A");						
			}
		}
		
		if (iBlue!=2)
		{
			switch (sArea)
			{
			case "station_01": MoveToLocation("station_03", "B_STATION_EXIT_A");
			case "station_02": MoveToLocation("station_03", "B_STATION_EXIT_B");		
			case "station_03": 
				if (iState==1) MoveToLocation("station_01", "B_STATION_EXIT_B");		
				else MoveToLocation("station_02", "B_STATION_EXIT_A");		
			case "station_05": 
				if (iState==1) MoveToLocation("station_06", "B_STATION_EXIT_B");		
				else MoveToLocation("station_01", "B_STATION_EXIT_A");		
			case "station_06": 
				if (iState==1) MoveToLocation("station_02", "B_STATION_EXIT_A");		
				else MoveToLocation("station_05", "B_STATION_EXIT_B");		
			case "station_21": MoveToLocation("station_23", "B_STATION_EXIT_A");		
			case "location12": 
				if (iState==1) MoveToLocation("station_36", "B_STATION_EXIT_A");		
				else MoveToLocation("station_35", "B_STATION_EXIT_B");		
			case "location13": MoveToLocation("station_17", "B_STATION_EXIT_A");
			case "station_17": MoveToLocation("station_12", "B_STATION_EXIT_B");		
			case "station_12": MoveToLocation("station_17", "B_STATION_EXIT_B");		
			case "station_23": MoveToLocation("station_21", "B_STATION_EXIT_B");		
			case "station_33": 
				if (iState==1) MoveToLocation("station_35", "B_STATION_EXIT_B");		
				else MoveToLocation("station_32", "B_STATION_EXIT_A");		
			case "station_32": 
				if (iState==1) MoveToLocation("station_33", "B_STATION_EXIT_B");		
				else MoveToLocation("station_36", "B_STATION_EXIT_A");		
			case "station_36": 
				if (iState==1) MoveToLocation("station_32", "B_STATION_EXIT_B");		
				else MoveToLocation("location12", "B_STATION_EXIT_A");		
			case "station_35": 
				if (iState==1) MoveToLocation("location12", "B_STATION_EXIT_B");		
				else MoveToLocation("station_33", "B_STATION_EXIT_A");		
			}
		}
		PlayVideo("Data\Video\tunnel.bik");
		}
}

void proc OnTen()
{
	char sArea;
	sArea = GetArea();

	int iBlue;
	iBlue = 1;
	
	switch (sArea)
	{
		case "station_01": iBlue = 0;
		case "station_02": iBlue = 0;		
		case "location12": iBlue = 0;
		case "location13": iBlue = 0;
	}

	if (iBlue!=0)
	{
		int iValue;
		iValue = GetVar("AIM.UNDER.BLUE");
		iValue = iValue + 1;
		if (iValue>=3) iValue = 0;
		SetVar("AIM.UNDER.BLUE", iValue);

		if (iValue==2)
		{
		   ChangeObjectID("B_STATION_LIGHT_LEFT", "STN_U_TRANSFER_SEMAFON_BLUE");
		   ChangeObjectID("B_STATION_LIGHT_RIGHT", "STN_U_TRANSFER_SEMAFON_BLUE");
		}
		else
		{
		   ChangeObjectID("B_STATION_LIGHT_LEFT", "STN_U_TRANSFER_SEMAFON_GREEN");
		   ChangeObjectID("B_STATION_LIGHT_RIGHT", "STN_U_TRANSFER_SEMAFON_GREEN");
		}
	}
}

void proc OnEnterLocation(char sLoc)
{
	OnTen();
	
	//Устанавливаем нужные объекты гейтов по ID
	
	ChangeObjectID("B_STATION_A", "BLD_U_TRANSFER_GATE_A");
	ChangeObjectID("B_STATION_B", "BLD_U_TRANSFER_GATE_B");
	
	if (sLoc=="station_17")
	{
		if (GetItem("TS_ITEM1"))
		{
			ChangeObjectID("B_STATION_DOOR", "BLD_U_LOCK_GATE_TMN");
			ChangeObjectID("B_STATION_DOOR2", "BLD_U_LOCK_GATE_TMN");
		}
		else
		{
			ChangeObjectID("B_STATION_DOOR", "BLD_U_LOCK_GATE_TMNL");
			ChangeObjectID("B_STATION_DOOR2", "BLD_U_LOCK_GATE_TMNL");
		}
	}

	// Создаём "бездушных" -- пустые глайдеры, подконтрольные Подземным
	
	int iAmount;
	int i = 0;
	
	iAmount=RandomInt(3)+1;
	
	switch (sLoc)
	{
	case "station_17":
		{
			iAmount = RandomInt(5)+1;
		}
	case "station_21":
		{
			iAmount = RandomInt(5)+1;
		}
	case "station_33":
		{
			iAmount = 0;
		}
	case "station_23":
		{
			iAmount = 0;
		}
	}
	
	while(i<iAmount)
	{
		char	sMechName;
		char	sPoint;
		  
		sPoint = "U_ENEMY_"+char(i+1);
		sMechName = GetUniqueMechID();
		  
		if(sLoc!="station_21" && sLoc!="location12" && sLoc!="station_17")
		{
			if (RandomInt(3)>1)
			{
				CreateMech(sMechName, sPoint, "CFG_UNDER03");
			}

			else
			{
				CreateMech(sMechName, sPoint, "CFG_UNDER02");
			}
		}

		else 
		{
			CreateMech(sMechName, sPoint, "CFG_UNDER01");
		}

		SetMechGuard(sMechName, sPoint);
		SetRelation(sMechName, "PLAYER", -9);

		i = i+1;
	}
}
